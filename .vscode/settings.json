{
    // The number of spaces a tab is equal to. This setting is overridden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.tabSize": 2,
​
    // Insert spaces when pressing Tab. This setting is overriden
    // based on the file contents when `editor.detectIndentation` is true.
    "editor.insertSpaces": true,
​
    // When opening a file, `editor.tabSize` and `editor.insertSpaces`
    // will be detected based on the file contents. Set to false to keep
    // the values you've explicitly set, above.
    "editor.detectIndentation": false,

    "editor.codeActionsOnSave": {
      "source.fixAll.stylelint": true
    },
        // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
          "other": true,
          "comments": true,
          "strings": true
    },
  
       // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
      "editor.acceptSuggestionOnCommitCharacter": true,
  
      // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
      "editor.acceptSuggestionOnEnter": "on",
  
      // Controls the delay in ms after which quick suggestions will show up.
      "editor.quickSuggestionsDelay": 1,
  
      // Controls if suggestions should automatically show up when typing trigger characters
      "editor.suggestOnTriggerCharacters": true,
  
      // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
      "editor.tabCompletion": "off",
  
      // Controls whether sorting favours words that appear close to the cursor
      "editor.suggest.localityBonus": true,
  
      // Controls how suggestions are pre-selected when showing the suggest list
      "editor.suggestSelection": "recentlyUsed",
  
      // Enable word based suggestions
      "editor.wordBasedSuggestions": true,
  
      // Enable parameter hints
      "editor.parameterHints.enabled": true,
}